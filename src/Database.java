import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;

import javax.swing.JOptionPane;

public class Database {
	
	//connect function...
	//gets a connection, returns a var of type Connection if it succeeded, otherwise returns null
	//this shouldnt ever get called outside of this class, so set to private
	private static Connection connect() {
		try {
			//finds the class to connect to the server
			Class.forName("com.mysql.cj.jdbc.Driver");
			//attempts to the connect to the described server, (server), (user), (password)
			//returns connection if succeeds
			return DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/scholash", "root", "");			
		} catch (Exception e) {
			//if fails connection, returns null
			return null;
		}
	}
	
	//log in, verifies login with provided username and password by comparing it to rows in the users table in scholash database in mysql
	public static int login(String username, String password) {
		//gets the connection via the function we made
		Connection connection = connect();
		if (connection == null) return 0; // if connection failed, return 0
		//otherwise try to login
		try {
			//prepare a statement to execute in mysql, the (?) represent variables we will set
			//this specific statement is saying...
			// select any row from users...
			// where their username is equal to ?
			// and their password is equal to ?
			PreparedStatement statement = connection.prepareStatement("select * from users where username=? and password=?");
			//set first var to username
			statement.setString(1, username);
			//set second var to password
			statement.setString(2, password);
			//execute the statement--it returns a variable of type ResultSet, which is iterable
			//and if there is a row next in the ResultSet, that means theres a row that matches the username and password we inputted
			//thus theres a user
			if (statement.executeQuery().next()) return 1; // if user found, return 1
			return 2; // if user not found, return 2
		} catch(Exception e) {
			//pretty sure this line will never execute, but if it does, return 0 for reasons bellow
			return 0; // if mysql for some reason failed, assume connection failed and return 0
		}
	}
	
	//signs up with given username and password, essentially inserts a row into the users table in scholash database in mysql
	public static int signup(String username, String password) {
		//get connection
		Connection connection = connect();
		if (connection == null) return 0; // if connection failed, return 0
		try {
			//this statement says...
			// insert a row into the users table
			// with a value describing the username and password
			//		we have to say "users(username, password) bc users table is formatted as (id, username, password)
			//			note that users is equal to users(id, username, password)
			//		and id is auto generated by mysql
			//		so we have to specify were only adding username n password
			PreparedStatement statement = connection.prepareStatement("insert into users(username, password) value(?, ?)");
			//assign values to the ? in statement
			statement.setString(1, username);
			statement.setString(2, password);
			//execute the update
			statement.executeUpdate();
			return 1; // if sign up succeeds, return 1
		} catch (Exception e) { //this will run either if the username is already found in the db, or the input username/password dont meet the table contraints
			if (e.toString().toLowerCase().contains("duplicate")) return 2; // if username alr exists, return 2
			return 3; // if user/password dont meet requirements, return 3
		}
	}
}
